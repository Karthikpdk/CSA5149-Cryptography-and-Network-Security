#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

long int p, q, n, t, flag, e[100], d[100], temp[100], j, m[100], en[100], i;
char msg[100];

int prime(long int pr);
void ce();
long int cd(long int x);
void encrypt();
void decrypt();

int main() {
    printf("\nEnter first prime number: ");
    scanf("%ld", &p);
    if (!prime(p)) {
        printf("\nWrong input\n");
        return 1;
    }

    printf("\nEnter another prime number: ");
    scanf("%ld", &q);
    if (!prime(q) || p == q) {
        printf("\nWrong input\n");
        return 1;
    }

    printf("\nEnter message: ");
    scanf("%s", msg);

    for (i = 0; msg[i] != '\0'; i++)
        m[i] = msg[i];

    n = p * q;
    t = (p - 1) * (q - 1);
    ce();

    printf("\nPossible values of e and d are:\n");
    for (i = 0; i < j - 1; i++)
        printf("\n%ld\t%ld", e[i], d[i]);

    encrypt();
    decrypt();

    return 0;
}

int prime(long int pr) {
    int i;
    int j = sqrt(pr);
    for (i = 2; i <= j; i++) {
        if (pr % i == 0)
            return 0;
    }
    return 1;
}

void ce() {
    int k = 0;
    for (i = 2; i < t; i++) {
        if (t % i == 0)
            continue;
        if (prime(i) && i != p && i != q) {
            e[k] = i;
            if ((d[k] = cd(e[k])) > 0) {
                k++;
            }
            if (k == 99)
                break;
        }
    }
    j = k;
}

long int cd(long int x) {
    long int k = 1;
    while (1) {
        k += t;
        if (k % x == 0)
            return k / x;
    }
}

void encrypt() {
    long int pt, ct, key = e[0], k;
    int len = strlen(msg);
    for (i = 0; i < len; i++) {
        pt = m[i] - 96;
        k = 1;
        for (j = 0; j < key; j++) {
            k = (k * pt) % n;
        }
        temp[i] = k;
        en[i] = k + 96;
    }
    en[i] = -1;

    printf("\nThe encrypted message is: ");
    for (i = 0; en[i] != -1; i++)
        printf("%c", en[i]);
}

void decrypt() {
    long int pt, ct, key = d[0], k;
    for (i = 0; en[i] != -1; i++) {
        ct = temp[i];
        k = 1;
        for (j = 0; j < key; j++) {
            k = (k * ct) % n;
        }
        pt = k + 96;
        m[i] = pt;
    }
    m[i] = -1;

    printf("\nThe decrypted message is: ");
    for (i = 0; m[i] != -1; i++)
        printf("%c", m[i]);
}
